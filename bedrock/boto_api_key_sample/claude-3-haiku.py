# ▼今回のポイント・用語まとめ
# ・環境変数　　　: プログラムの中に書かず、外部ファイル(.env)に隠しておく設定値
# ・Bedrock Runtime: AWS が用意した生成 AI(Large Language Model) を呼び出す窓口
# ・boto3　　　　  : AWS を Python から操作するための公式ライブラリ
# ・VPC エンドポイント: 社内ネットワーク(プライベート) から AWS へ安全に接続するしくみ
# ・Bearer トークン: API の利用権限を示す 1 回〜長期間使えるカギ

"""
このスクリプトは
1. .env ファイルから AWS 情報を読み込み
2. boto3 で AWS Bedrock の Claude 3 Haiku モデルに接続し
3. 「こんにちは」と送って返事をもらい、コンソールに表示します。
"""

# ----- ライブラリの読み込み -------------------------------------------------
import os, boto3  # os=パソコン操作、boto3=AWS操作  (複数 import を1行にまとめて書いている)

# (注意) 実際の現場では分けて書くことも多いです
from dotenv import (
    load_dotenv,
)  # .env から環境変数を読む便利ライブラリ (pip install python-dotenv)
import os  # 2回目の import だが、コード改変禁止なのでそのまま  # ← インラインコメント

# ---------------------------------------------------------------------------
load_dotenv()  # .env を読み込み、AWS_ACCESS_KEY などを環境変数としてメモリに取り込む

# ★Bedrock の長期／短期 API キーをここに貼り付け
# os.environ["AWS_BEARER_TOKEN_BEDROCK"] = (
#    "bedrock-api-key-samplexx"
# )
# ↑Bearer トークンをコードに直書きする方法もあるが、セキュリティ的には .env に入れる方が安全

# VPCエンドポイントで private DNS を有効にしている前提
# ---------------------------------------------------------------------------
# 会社や学校など閉じたネットワーク(VPC) から直接 Bedrock にアクセスする設定です
client = boto3.client(
    "bedrock-runtime", region_name="ap-northeast-1"
)  # 東京リージョンを指定

# ---------------------------------------------------------------------------
#                     Claude 3 Haiku へ「こんにちは」を送る部分
# ---------------------------------------------------------------------------
response = client.converse(  # Bedrock の「会話API」を呼び出す
    modelId="anthropic.claude-3-haiku-20240307-v1:0",  # 使いたいモデルの ID
    messages=[  # 会話履歴をリストで渡す
        {
            "role": "user",  # 「だれが」話したか(ユーザー側)
            "content": [  # Claude 系の仕様でさらにリスト
                {"text": "こんにちは"}  # 送る文章(1件)
            ],
        }
    ],
)

# ---------------------------------------------------------------------------
#                   返ってきたテキストを画面に表示
# ---------------------------------------------------------------------------
print(
    response["output"]["message"]["content"][0]["text"]
)  # ネストの深い JSON をキーでたどる
